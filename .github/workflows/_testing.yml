name: Reusable testing jobs

on:
  workflow_call:

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up old runner logs
        run: |
          sudo rm -rf /home/runner/runners/*/_diag/*.log
      - name: Checkout Code Repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Prune Docker System (Before Build)
        run: |
          docker system prune -af --volumes
          echo "Disk space after pruning before build:"
          df -h /
      - uses: crazy-max/ghaction-github-runtime@v3
      - uses: docker/bake-action@v6.5.0
        with:
          files: ./local.yml
          load: true
          push: false
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      - name: Run DB Migrations
        run: docker compose -f local.yml run --rm django python manage.py migrate

      - name: Run Django Tests with Coverage
        run: docker compose -f local.yml run --rm django pytest --cov=cyment_com --cov=cursos --cov-report=html

      - name: Upload Backend Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-htmlcov
          path: htmlcov
          if-no-files-found: warn

      - name: Tear down the Stack
        run: docker compose -f local.yml down

      - name: Install Frontend Dependencies
        run: docker compose -f local.yml run --no-deps --rm node pnpm install

      - name: Run Frontend Tests (Vitest)
        run: docker compose -f local.yml run --no-deps --rm node pnpm test:run

      - name: Run Frontend Coverage
        run: docker compose -f local.yml run --no-deps --rm node pnpm test:coverage

      - name: Upload Frontend Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: coverage
          if-no-files-found: warn

      - name: Tear down the Stack and Prune Docker System
        if: always() # Ensure this runs even if previous steps fail
        run: |
          docker compose -f local.yml down --volumes --remove-orphans # Clean up compose resources including volumes
          docker system prune -af --volumes # Aggressively prune everything else
          echo "Disk space after final cleanup:"
          df -h /
