name: local-dev

volumes:
  cyment_com_local_postgres_data: {}
  cyment_com_local_postgres_data_backups: {}
  cyment_com_local_redis_data: {}
  local_certs: {}
  local_media: {}
  node_modules: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
      tags:
        - 'acyment/django'
    image: cyment_com_local_django
    container_name: cyment_com_local_django
    volumes:
      - /app/.venv
      - .:/app:z
      - local_media:/app/local-dev/media
    depends_on:
      - postgres
      - redis
      - mailpit
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
      - '5678:5678'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
      tags:
        - 'acyment/postgres'
    image: cyment_com_production_postgres
    container_name: cyment_com_local_postgres
    volumes:
      - cyment_com_local_postgres_data:/var/lib/postgresql/data
      - cyment_com_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: cyment_com_local_mailpit
    ports:
      - '8025:8025'

  redis:
    image: docker.io/redis:6
    container_name: cyment_com_local_redis

    volumes:
      - cyment_com_local_redis_data:/data

  celeryworker:
    <<: *django
    image: cyment_com_local_celeryworker
    container_name: cyment_com_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cyment_com_local_celerybeat
    container_name: cyment_com_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: cyment_com_local_flower
    container_name: cyment_com_local_flower
    ports:
      - '5555:5555'
    command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
      tags:
        - 'acyment/node'
    image: cyment_com_local_node
    container_name: cyment_com_local_node
    environment:
      NODE_ENV: development
      VIRTUAL_HOST: my-dev.local
      VIRTUAL_PORT: 3000
    depends_on:
      - django
    volumes:
      - .:/app:z
      # Share node_modules via named volume so other services (e2e) can access it
      - node_modules:/app/node_modules
    command: pnpm run dev
    ports:
      - '3000:3000'
        # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - '3001:3001'
      - '8888:8888'

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
    restart: always
    depends_on:
      - node

  playwright:
    image: mcr.microsoft.com/playwright:v1.55.0-jammy
    container_name: cyment_com_local_playwright
    working_dir: /app
    depends_on:
      - node
    environment:
      E2E_BASE_URL: http://node:3000
      CI: 'true'
    shm_size: 2gb
    volumes:
      - .:/app:z
      - node_modules:/app/node_modules
      - ./playwright-report:/app/playwright-report
      - ./test-results:/app/test-results
